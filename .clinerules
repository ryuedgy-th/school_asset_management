# School Asset Management - Development Rules

## üéØ Project Context
Odoo 19 module for school asset management with PDPA compliance.
**Current Phase:** All Improvements Complete - Ready for Wizard Development
**Status:** ‚úÖ Phase 1-4 Complete (100%)

## üì° Server Information
**Odoo Server:** root@128.199.203.205
**SSH Key:** ~/.ssh/RyusOpen
**Module Path:** /opt/odoo19/custom_addons/school_asset_management/

## üìö Documentation (READ THESE FIRST)

### Main Documentation:
1. **PROJECT_STATUS.md** - Project overview, version history, task status
2. **ODOO19_BEST_PRACTICES.md** - Complete Odoo 19 coding standards (MANDATORY)
3. **TASK_*.md** - Implementation records for completed tasks

### Reference Documentation:
- **ARCHIVE_IMPROVEMENT_WORKFLOW.md** - Detailed task prompts (archived, reference only)

---

## ‚ö†Ô∏è CRITICAL: Odoo 19 Standards (MANDATORY)

### Python Standards ‚úÖ
```python
# ‚úÖ DO
from odoo import models, fields, api, _
import logging
_logger = logging.getLogger(__name__)

@api.depends('field1', 'field2')
def _compute_field(self):
    for record in self:
        record.computed = record.field1 + record.field2

# ‚ùå DON'T
print("Debug")  # Never use print()
self.env.cr.execute("SELECT ...")  # Avoid raw SQL
```

### XML View Standards (Odoo 19) ‚úÖ
```xml
<!-- ‚úÖ DO: Use <list> tag (Odoo 19) -->
<list>
    <field name="name"/>
    <field name="state" widget="badge" invisible="not active"/>
</list>

<!-- ‚ùå DON'T: Use deprecated tags -->
<tree>  <!-- DEPRECATED in Odoo 19 -->
<field name="state" attrs="{'invisible': [...]}" />  <!-- DEPRECATED -->
```

### JavaScript Standards ‚úÖ
```javascript
// ‚úÖ DO: Use proper module format
/** @odoo-module **/
import { Component } from "@odoo/owl";

// ‚úÖ DO: Error handling
try {
    // code
} catch (error) {
    console.error('Error:', error);
}
```

### Security Rules ‚úÖ
- ‚úÖ Use `ir.model.access.csv` for model-level access
- ‚úÖ Use `ir.rule` for record-level security
- ‚úÖ Use `sudo()` only when necessary with validation
- ‚úÖ Log all security-sensitive operations

---

## üìã All Tasks Complete ‚úÖ

### ‚úÖ Phase 1: CRITICAL (Complete)
- [x] Task 1.1: Redis Rate Limiting - `models/security_helpers.py`
- [x] Task 1.2: External Dependencies - `__manifest__.py`

### ‚úÖ Phase 2: HIGH PRIORITY (Complete)
- [x] Task 2.1: HMAC Token Security - `models/asset_*_assignment.py`
- [x] Task 2.2: Token Decorator Pattern - `controllers/main.py`
- [x] Task 2.3: PDPA Email Templates - `data/dsr_email_templates.xml`

### ‚úÖ Phase 3: RELIABILITY (Complete)
- [x] Task 3.1: Bundle Font File (19.0.1.8.0)
- [x] Task 3.2: JavaScript Refactoring (19.0.1.9.0)

### ‚úÖ Phase 4: CLEANUP (Complete)
- [x] Task 4.1: Code Cleanup (19.0.1.10.0)

**See PROJECT_STATUS.md for full details**

---

## üîß Module Structure

```
school_asset_management/
‚îú‚îÄ‚îÄ __init__.py
‚îú‚îÄ‚îÄ __manifest__.py
‚îú‚îÄ‚îÄ models/          # Business logic (100% complete)
‚îú‚îÄ‚îÄ views/           # UI components (100% complete, Odoo 19 compliant)
‚îú‚îÄ‚îÄ security/        # Access control (100% complete)
‚îú‚îÄ‚îÄ data/            # Default data, sequences
‚îú‚îÄ‚îÄ controllers/     # Public pages (100% complete)
‚îú‚îÄ‚îÄ static/src/      # JavaScript, CSS
‚îú‚îÄ‚îÄ templates/       # QWeb templates
‚îú‚îÄ‚îÄ reports/         # PDF reports (100% complete)
‚îú‚îÄ‚îÄ wizards/         # Wizards (20% complete - 1/5 done)
‚îî‚îÄ‚îÄ tests/           # Unit tests
```

---

## ‚úÖ Mandatory Coding Standards

### Before Writing Code:
1. ‚úÖ Read `ODOO19_BEST_PRACTICES.md` for the relevant section
2. ‚úÖ Check `PROJECT_STATUS.md` for current task priorities
3. ‚úÖ Review `TASK_*.md` for similar implementations

### Code Quality Checklist:
- [ ] No `print()` statements (use `_logger`)
- [ ] No raw SQL (use ORM: `search`, `create`, `write`, `unlink`)
- [ ] All models have `_description` (required in Odoo 19)
- [ ] All methods have docstrings (Google style)
- [ ] Type hints present: `def method(self, param: str) -> bool:`
- [ ] Use `<list>` not `<tree>` in views
- [ ] Use `invisible` not `attrs` in views
- [ ] Exception handling with try-except
- [ ] Input validation for all user inputs
- [ ] Security audit logging for sensitive operations

### Testing Before Commit:
```bash
# Validate syntax
python3 -c "import ast; ast.parse(open('__manifest__.py').read())"

# Check for violations
grep -r "print(" models/ controllers/  # Should return nothing
grep -r "<tree" views/  # Should return nothing

# Run tests
odoo-bin -d db -u school_asset_management --test-enable
```

---

## üéØ Git Workflow

### Commit Message Format:
```
feat: add feature        # New feature
fix: fix bug            # Bug fix
refactor: improve code  # Code refactoring
docs: update docs       # Documentation
test: add tests         # Tests
chore: maintenance      # Maintenance
```

### Branch Strategy:
- `main` - Production-ready code
- `feature/*` - New features
- `fix/*` - Bug fixes
- `refactor/*` - Code improvements

---

## üîí Security & PDPA

### Security Features:
- ‚úÖ Token-based authentication for public pages
- ‚è∏Ô∏è Rate limiting (needs Redis upgrade - Task 1.1)
- ‚úÖ Security audit logging
- ‚úÖ Watermarked signatures (prevents forgery)

### PDPA Compliance:
- ‚úÖ Consent tracking (`asset.consent.log`)
- ‚úÖ Data subject rights (`asset.data.request`)
- ‚úÖ Privacy policy consent forms
- ‚è∏Ô∏è Email notifications (Task 2.3)

---

## üé® Brand Standards

**MYIS Colors:**
- **Purple:** #574193 (Primary - headings, buttons)
- **Green:** #6ab42d (Accent - success, CTAs)
- **Gray:** #eeeeee, #f0f0f0 (Backgrounds)

**Design:** Minimal & Professional, Responsive HTML, Bootstrap 5

---

## üìä Performance Best Practices

```python
# ‚úÖ DO: Batch operations
records.write({'field': value})

# ‚úÖ DO: Use mapped() for extraction
emails = records.mapped('partner_id.email')

# ‚úÖ DO: Use filtered() for filtering
draft_records = records.filtered(lambda r: r.state == 'draft')

# ‚úÖ DO: Use search_read() for list views
data = model.search_read(domain, fields)

# ‚ùå DON'T: Loop for batch operations
for record in records:
    record.field = value  # Slow!
```

---

## üöÄ Development Priority

### ‚úÖ All Improvement Tasks Complete
**Phase 1-4:** All tasks completed successfully
- ‚úÖ Redis Rate Limiting (production-ready)
- ‚úÖ HMAC Token Security (secure)
- ‚úÖ PDPA Email Templates (compliant)
- ‚úÖ Code Cleanup & Refactoring (maintainable)

### üéØ Next: Wizard Development
**Ready to implement:**
- Teacher Checkout/Check-in Wizards
- Student Distribution/Collection Wizards
- Follow ODOO19_BEST_PRACTICES.md
- Test thoroughly before deployment

---

## üìû Quick Reference

**Documentation:** `PROJECT_STATUS.md` for overview, `ODOO19_BEST_PRACTICES.md` for standards
**Server:** root@128.199.203.205 (SSH: ~/.ssh/RyusOpen)
**Version:** 19.0.1.10.0
**Status:** ‚úÖ Phase 3-4 Complete, Ready for Phase 1-2

---

## üîç Common Tasks

### Deploy to Production:
```bash
# Sync files
scp -i ~/.ssh/RyusOpen [files] root@128.199.203.205:/opt/odoo19/custom_addons/school_asset_management/

# Upgrade module (via Odoo UI)
Apps > School Asset Management > Upgrade
```

### Check Logs:
```bash
ssh -i ~/.ssh/RyusOpen root@128.199.203.205
sudo tail -f /var/log/odoo19/odoo.log | grep -i error
```

### Module Development:
```bash
# Restart Odoo (after code changes)
sudo systemctl restart odoo19

# Check module status
odoo-bin -d db -u school_asset_management --test-enable
```

---

**Last Updated:** 2025-10-18
**Current Version:** 19.0.1.10.0
**Status:** ‚úÖ All improvements complete
**Next Milestone:** Wizard Development
